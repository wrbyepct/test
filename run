#!/bin/bash

set -e

release:prod() {
    release:test
    publish:prod
}


publish:prod() {
    try-load-dotenv || true

    DIRNAME=${DIRNAME:-.}
    twine upload ./${DIRNAME}/dist/* \
        -r pypi \
        --username=__token__ \
        --password="${PROD_PYPI_TOKEN}"

}


release:test() {
 
    clean ${DIRNAME}
    build ${DIRNAME}
    publish:test ${DIRNAME}
}


lint() {
    git add .; pre-commit run --all-files --show-diff-on-failure
}


lint:ci() {
    SKIP=no-commit-to-branch pre-commit run --all-files --show-diff-on-failure
}



clean() {
    DIRNAME=${DIRNAME:-.}
    rm -rf ${DIRNAME}/dist ${DIRNAME}/*.egg-info
 
}


build() {
    DIRNAME=${DIRNAME:-.}
    python -m build ${DIRNAME}
}


publish:test() {
    try-load-dotenv || true

    DIRNAME=${DIRNAME:-.}
    twine upload ./${DIRNAME}/dist/* \
        -r testpypi \
        --username=__token__ \
        --password="${TEST_PYPI_TOKEN}"

}


try-load-dotenv() {
    if [[ ! -f "./.env"  ]]; then
        echo "no .env file found." 
        return 1
    fi

    while read -r line; do
        export "$line"
    done < <(grep -v -e "^\s*#" -e "^\s*$" ./.env)

}


test:ci() {
    INSTALL_PKG_DIR="$(python -c 'import school; print(school.__path__[0])')"

    python -m pytest "./tests/" \
    --cov "${INSTALL_PKG_DIR}" \
    --cov-report html:test-reports \
    --cov-report term
}

test-report-html() {
    python -m http.server -d test-reports 
}


install() {
   pip install --upgrade pip && pip install -r requirements.txt
}


help() {
    echo "$0 <task> <args>"
    echo "Tasks:"
    compgen -A function | cat -n
}


try-load-file() {
    if [[ ! -f "$1"  ]]; then
        echo "no ${1} file found." 
        return 1
    fi

    local count=0
    while true ; do
        if ! read -r line; then
            return 0
        fi
        echo "$line"
        (( count++ ))
        
    done < <(awk '!/^\s*#/ && !/^\s*$/' "$1")

    echo "${count} lines in total"

}


DIRNAME=my_package
echo ""
TIMEFORMAT="Task completed in %3lR" # this changes the env 'TIMEFORMAT' that 'time' uses
time ${@:-help} 
